.modal {
	position: fixed;
	top: 0px;
	left: 0px;
	width: 100%;
	height: 100vh;
	background-color: rgba(255, 255, 255, 0.8);
	z-index: 9;
	backdrop-filter: blur(10px);
	padding: 10vh 10vw;

	.con {
		width: 100%;
		height: 100%;

		div {
			width: 100%;
			height: 100%;
			img {
				width: 100%;
				height: 100%;
				object-fit: contain !important;
			}
		}
	}

	.btnClose {
		border: none;
		background: transparent;
		font: 600 0.8rem/1 'orbitron';
		letter-spacing: 1px;
		color: #333;
		position: absolute;
		top: 4vh;
		right: 3vw;
		cursor: pointer;
	}
}

//미션
//1. Modal의 생성 유무를 Gallery안쪽의 특정state에 연동되도록 처리
//2. 기본적으로 Modal이 안보이도록 초기설정.
//3. 아티클요소 자체를 클릭하면 Modal이 보이도록 설정
// 결국내가하고싶은것. 사진 누르면 전체화면으로 해당 사진 뜨고, 버튼 누르면 팝업 없어지고 opacity 0의 전체화면 나오게
//클릭 이벤트가 발생하는 각각의 article요소에 모달 안에 출력되어야하는 큰이미지url정보값을 속성값 이용해 숨김
//아티클 요소 클릭하는 순간 미리 숨겨논 이밎 url정보값을 Modal안쪽에 Pic컴포넌트 호출하면서 src속성 전달

//미션 (2시 30분까지  고민)
//자식 컴포넌트인 Modal안쪽에서 닫기 버튼 클릭시 부모에 있는 ModalOpen이라는 상태값을 false로 변경해서 모달창 닫는 로직 고민
//리액트에서 데이터는 부모에서 자식으로 데이터를 전달할 수 있는 단방향 데이터 방식임을 유의
//부모에서 Modal이란 컴포넌트에 어떤형태의 정보를 전달해야지 자식에서 해당 정보를 바탕으로 자기 자신을 언마운트 처리할지를 고민

/*
	미션 (3시 20분까지)
	- 모달창 생성시 document.body.style.overflow= 'hidden'으로 처리해서 스크롤기능 비활성화처리
	- 모달창 제거시 document.body.style.overflow='auto'로 처리해서 스크롤기능 다시 활성화
*/
